/* Enhanced 3D Monitor Desktop */
.monitor-desktop {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  transform-style: preserve-3d;
  animation: float 6s ease-in-out infinite;
  z-index: 100;
}

.monitor-container {
  position: relative;
  transform-style: preserve-3d;
  transform: rotateX(15deg) rotateY(-20deg) rotateZ(2deg);
  transition: transform 0.8s cubic-bezier(0.25, 0.46, 0.45, 0.94);
  animation: monitorFloat 8s ease-in-out infinite;
}

.monitor-container:hover {
  transform: rotateX(10deg) rotateY(-15deg) rotateZ(0deg) scale(1.05);
  filter: drop-shadow(0 2vw 4vw rgba(59, 130, 246, 0.3));
}

.monitor-frame {
  width: 70vw;
  height: 45vw;
  background: linear-gradient(135deg, #2a2a3e 0%, #1a1a2e 50%, #0f0f23 100%);
  border-radius: 2vw;
  position: relative;
  box-shadow:
    0 0 8vw rgba(0, 0, 0, 0.9),
    inset 0 0 3vw rgba(255, 255, 255, 0.1),
    0 3vw 6vw rgba(0, 0, 0, 0.4),
    0 0 0 0.3vw #333;
  transform-style: preserve-3d;
  padding: 2.5vw;
  border: 0.2vw solid #444;
}

.monitor-frame::before {
  content: '';
  position: absolute;
  top: -0.8vw;
  left: -0.8vw;
  right: -0.8vw;
  bottom: -0.8vw;
  background: linear-gradient(135deg, #555, #333, #111);
  border-radius: 3vw;
  z-index: -1;
  transform: translateZ(-1.5vw);
  box-shadow: 0 0 2vw rgba(0, 0, 0, 0.8);
}

.monitor-frame::after {
  content: '';
  position: absolute;
  top: -1.2vw;
  left: -1.2vw;
  right: -1.2vw;
  bottom: -1.2vw;
  background: linear-gradient(135deg, #666, #444, #222);
  border-radius: 3.5vw;
  z-index: -2;
  transform: translateZ(-2vw);
  opacity: 0.6;
}

.monitor-screen {
  width: 100%;
  height: 85%;
  background: linear-gradient(135deg, #0a0a0f, #1a1a2e, #0f1419);
  border-radius: 1.5vw;
  border: 0.4vw solid #333;
  position: relative;
  overflow: hidden;
  box-shadow:
    inset 0 0 4vw rgba(0, 0, 0, 0.9),
    0 0 3vw rgba(100, 200, 255, 0.3),
    inset 0 0 1vw rgba(59, 130, 246, 0.2);
  transform: translateZ(0.5vw);
}

.screen-glass {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background: linear-gradient(135deg,
    rgba(255, 255, 255, 0.15) 0%,
    rgba(255, 255, 255, 0.08) 25%,
    rgba(255, 255, 255, 0.02) 50%,
    rgba(255, 255, 255, 0.08) 75%,
    rgba(255, 255, 255, 0.15) 100%);
  pointer-events: none;
  z-index: 10;
  animation: glassReflection 4s ease-in-out infinite;
}

.desktop-background {
  position: absolute;
  width: 100%;
  height: 100%;
  background: linear-gradient(135deg, #1e40af, #3730a3, #581c87, #7c2d12);
  opacity: 0.95;
  animation: bgShift 12s ease-in-out infinite;
  background-size: 200% 200%;
}

.desktop-icons {
  position: absolute;
  top: 3vw;
  left: 3vw;
  display: grid;
  grid-template-columns: repeat(5, 1fr);
  gap: 2.5vw;
  width: 85%;
  z-index: 5;
}

.desktop-icon {
  display: flex;
  flex-direction: column;
  align-items: center;
  color: white;
  font-size: 1.1vw;
  cursor: pointer;
  transition: all 0.4s cubic-bezier(0.25, 0.46, 0.45, 0.94);
  text-shadow: 0 0 1.5vw rgba(0, 0, 0, 0.9);
  transform-style: preserve-3d;
}

.desktop-icon:hover {
  transform: scale(1.15) translateZ(1vw);
  text-shadow: 0 0 2vw rgba(255, 255, 255, 0.9);
}

.desktop-icon-img {
  width: 4.5vw;
  height: 4.5vw;
  background: linear-gradient(135deg, #3b82f6, #1d4ed8, #3730a3);
  border-radius: 0.8vw;
  margin-bottom: 0.8vw;
  display: flex;
  align-items: center;
  justify-content: center;
  box-shadow: 0 0.8vw 1.5vw rgba(0, 0, 0, 0.4);
  transition: all 0.4s cubic-bezier(0.25, 0.46, 0.45, 0.94);
  transform-style: preserve-3d;
  border: 0.1vw solid rgba(255, 255, 255, 0.2);
}

.desktop-icon:hover .desktop-icon-img {
  box-shadow: 0 1.5vw 3vw rgba(59, 130, 246, 0.6);
  transform: translateZ(0.5vw);
}

.desktop-icon svg {
  width: 65%;
  height: 65%;
  fill: white;
  filter: drop-shadow(0 0 0.8vw rgba(255, 255, 255, 0.4));
}

.taskbar {
  position: absolute;
  bottom: 0;
  left: 0;
  width: 100%;
  height: 12%;
  background: linear-gradient(135deg, #1f2937, #111827, #0f0f23);
  border-top: 0.2vw solid #555;
  display: flex;
  align-items: center;
  padding: 0 2.5vw;
  box-shadow: 0 -0.8vw 1.5vw rgba(0, 0, 0, 0.6);
  backdrop-filter: blur(1vw);
}

.taskbar-item {
  width: 4vw;
  height: 4vw;
  background: linear-gradient(135deg, #3b82f6, #1d4ed8);
  border-radius: 0.8vw;
  margin-right: 1.2vw;
  display: flex;
  align-items: center;
  justify-content: center;
  cursor: pointer;
  transition: all 0.4s cubic-bezier(0.25, 0.46, 0.45, 0.94);
  box-shadow: 0 0.5vw 1vw rgba(0, 0, 0, 0.4);
  transform-style: preserve-3d;
  border: 0.1vw solid rgba(255, 255, 255, 0.2);
}

.taskbar-item:hover {
  transform: translateY(-0.5vw) translateZ(0.3vw);
  box-shadow: 0 1vw 2vw rgba(59, 130, 246, 0.5);
}

.taskbar-item svg {
  width: 65%;
  height: 65%;
  fill: white;
}

.monitor-base {
  position: absolute;
  bottom: -10vw;
  left: 50%;
  transform: translateX(-50%);
  width: 25vw;
  height: 10vw;
  background: linear-gradient(135deg, #2a2a3e, #1a1a2e, #111);
  border-radius: 1.5vw;
  box-shadow: 0 1.5vw 3vw rgba(0, 0, 0, 0.6);
  transform-style: preserve-3d;
  border: 0.2vw solid #333;
}

.monitor-base::before {
  content: '';
  position: absolute;
  top: -3vw;
  left: 47%;
  width: 3vw;
  height: 4vw;
  background: linear-gradient(135deg, #444, #222, #111);
  border-radius: 0.3vw;
  transform: translateZ(-0.8vw);
  box-shadow: 0 0 1vw rgba(0, 0, 0, 0.8);
}

/* Indicator Lights */
.indicator-lights {
  position: absolute;
  bottom: 1.5vw;
  right: 3vw;
  display: flex;
  gap: 1.5vw;
  z-index: 15;
}

.indicator {
  width: 1.2vw;
  height: 1.2vw;
  border-radius: 50%;
  position: relative;
  box-shadow: inset 0 0 0.5vw rgba(0, 0, 0, 0.6);
  transform-style: preserve-3d;
}

.indicator::before {
  content: '';
  position: absolute;
  top: 20%;
  left: 20%;
  width: 60%;
  height: 60%;
  border-radius: 50%;
  background: radial-gradient(circle, rgba(255, 255, 255, 0.8), transparent);
  transform: translateZ(0.1vw);
}

.power-indicator {
  background: radial-gradient(circle, #00ff00, #008800);
  animation: pulse 2s ease-in-out infinite;
}

.wifi-indicator {
  background: radial-gradient(circle, #4444ff, #0000cc);
  animation: pulse 2.5s ease-in-out infinite;
}

.bluetooth-indicator {
  background: radial-gradient(circle, #44ffff, #0088cc);
  animation: pulse 3.5s ease-in-out infinite;
}

.brand-logo {
  position: absolute;
  bottom: 0.8vw;
  left: 50%;
  transform: translateX(-50%);
  color: #888;
  font-size: 1vw;
  font-weight: bold;
  text-shadow: 0 0 0.8vw rgba(255, 255, 255, 0.3);
  font-family: 'Arial', sans-serif;
}

.ambient-light {
  position: absolute;
  top: -15vw;
  left: -15vw;
  width: 100vw;
  height: 75vw;
  background: radial-gradient(circle, rgba(100, 200, 255, 0.15), rgba(59, 130, 246, 0.1), transparent);
  border-radius: 50%;
  animation: ambientPulse 10s ease-in-out infinite;
  z-index: -2;
  transform: translateZ(-5vw);
}

/* Enhanced Animations */
@keyframes float {
  0%, 100% { transform: translate(-50%, -50%) translateY(0px) rotateY(0deg); }
  50% { transform: translate(-50%, -50%) translateY(-1vw) rotateY(2deg); }
}

@keyframes monitorFloat {
  0%, 100% {
    transform: rotateX(15deg) rotateY(-20deg) rotateZ(2deg);
  }
  33% {
    transform: rotateX(12deg) rotateY(-18deg) rotateZ(1deg);
  }
  66% {
    transform: rotateX(18deg) rotateY(-22deg) rotateZ(3deg);
  }
}

@keyframes glassReflection {
  0%, 100% { opacity: 0.6; }
  50% { opacity: 0.9; }
}

@keyframes bgShift {
  0%, 100% {
    filter: hue-rotate(0deg) brightness(1);
    background-position: 0% 50%;
  }
  25% {
    filter: hue-rotate(15deg) brightness(1.1);
    background-position: 100% 50%;
  }
  50% {
    filter: hue-rotate(30deg) brightness(0.9);
    background-position: 100% 100%;
  }
  75% {
    filter: hue-rotate(15deg) brightness(1.1);
    background-position: 0% 100%;
  }
}

@keyframes ambientPulse {
  0%, 100% {
    opacity: 0.4;
    transform: translateZ(-5vw) scale(1) rotate(0deg);
  }
  50% {
    opacity: 0.7;
    transform: translateZ(-5vw) scale(1.1) rotate(5deg);
  }
}


/* Responsive Design */
@media (max-width: 768px) {
  .monitor-frame {
    width: 90vw;
    height: 56vw;
  }

  .floating-btn {
    width: 8vw;
    height: 8vw;
  }

  .desktop-icon {
    font-size: 2vw;
  }

  .desktop-icon-img {
    width: 6vw;
    height: 6vw;
  }
}

/* Initially hide the monitor-desktop */
        .monitor-desktop {
            display: none;
        }
        /* Class to show the monitor with a smooth fade-in effect */
        .monitor-desktop.visible {
            display: block;
            animation: fadeIn 0.5s ease-in-out;
        }
        @keyframes fadeIn {
            from { opacity: 0; transform: translate(-50%, -50%) scale(0.95); }
            to { opacity: 1; transform: translate(-50%, -50%) scale(1); }
        }
        /* Fade-out animation for hiding the monitor */
        @keyframes fadeOut {
            from { opacity: 1; transform: translate(-50%, -50%) scale(1); }
            to { opacity: 0; transform: translate(-50%, -50%) scale(0.95); }
        }
        /* Style for the close button */
        .close-btn {
            position: absolute;
            top: 1vw;
            right: 1vw;
            width: 2vw;
            height: 2vw;
            background: linear-gradient(135deg, rgba(239, 68, 68, 0.8), rgba(220, 38, 38, 0.8));
            border-radius: 50%;
            display: flex;
            align-items: center;
            justify-content: center;
            cursor: pointer;
            z-index: 20;
            transition: all 0.3s ease;
            box-shadow: 0 0.5vw 1vw rgba(0, 0, 0, 0.3);
            border: 0.1vw solid rgba(255, 255, 255, 0.3);
        }
        .close-btn:hover {
            transform: scale(1.2);
            background: linear-gradient(135deg, rgba(239, 68, 68, 1), rgba(220, 38, 38, 1));
        }
        .close-btn svg {
            width: 60%;
            height: 60%;
            fill: white;
        }
</style>


</head>
<body>
    <div class="house">
        <div class="h-shadow"></div>
        <div class="h-lights">
            <div class="h-light"></div>
            <div class="h-light"></div>
            <div class="h-light"></div>
            <div class="h-light"></div>
            <div class="h-light"></div>
            <div class="h-light"></div>
        </div>
    </div>

   <!-- Notification Icon -->
  <div class="iot-icon notification" id="notification-icon">
    <svg viewBox="0 0 24 24">
      <path d="M12 22C13.1 22 14 21.1 14 20H10C10 21.1 10.9 22 12 22ZM18 16V11C18 7.93 16.37 5.36 13.5 4.68V4C13.5 3.17 12.83 2.5 12 2.5C11.17 2.5 10.5 3.17 10.5 4V4.68C7.63 5.36 6 7.92 6 11V16L4 18V19H20V18L18 16ZM8 11C8 8.24 9.88 6 12 6C14.12 6 16 8.24 16 11V16H8V11Z"/>                   </svg>
  </div>     

   <div class="monitor-desktop">
        <div class="monitor-container">
            <div class="monitor-frame">
                <div class="close-btn">
                    <svg viewBox="0 0 24 24">
                        <path d="M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z"/>
                    </svg>
                </div>
                <div class="monitor-screen">
                    <div class="screen-glass"></div>
                    <div class="desktop-background"></div>
                    <div class="desktop-icons">
                        <div class="desktop-icon">
                            <div class="desktop-icon-img">
                                <svg viewBox="0 0 24 24">
                                    <path d="M19 3H5C3.89 3 3 3.9 3 5V19C3 20.1 3.89 21 5 21H19C20.1 21 21 20.1 21 19V5C21 3.9 20.1 3 19 3ZM10 17H8V10H10V17ZM12 17H14V10H12V17ZM16 17H18V10H16V17Z"/>
                                </svg>
                            </div>
                            <span>App 1</span>
                        </div>
                        <div class="desktop-icon">
                            <div class="desktop-icon-img">
                                <svg viewBox="0 0 24 24">
                                    <path d="M19 3H5C3.89 3 3 3.9 3 5V19C3 20.1 3.89 21 5 21H19C20.1 21 21 20.1 21 19V5C21 3.9 20.1 3 19 3ZM10 17H8V10H10V17ZM12 17H14V10H12V17ZM16 17H18V10H16V17Z"/>
                                </svg>
                            </div>
                            <span>App 2</span>
                        </div>
                        <div class="desktop-icon">
                            <div class="desktop-icon-img">
                                <svg viewBox="0 0 24 24">
                                    <path d="M19 3H5C3.89 3 3 3.9 3 5V19C3 20.1 3.89 21 5 21H19C20.1 21 21 20.1 21 19V5C21 3.9 20.1 3 19 3ZM10 17H8V10H10V17ZM12 17H14V10H12V17ZM16 17H18V10H16V17Z"/>
                                </svg>
                            </div>
                            <span>App 3</span>
                        </div>
                        <div class="desktop-icon">
                            <div class="desktop-icon-img">
                                <svg viewBox="0 0 24 24">
                                    <path d="M19 3H5C3.89 3 3 3.9 3 5V19C3 20.1 3.89 21 5 21H19C20.1 21 21 20.1 21 19V5C21 3.9 20.1 3 19 3ZM10 17H8V10H10V17ZM12 17H14V10H12V17ZM16 17H18V10H16V17Z"/>
                                </svg>
                            </div>
                            <span>App 4</span>
                        </div>
                        <div class="desktop-icon">
                            <div class="desktop-icon-img">
                                <svg viewBox="0 0 24 24">
                                    <path d="M19 3H5C3.89 3 3 3.9 3 5V19C3 20.1 3.89 21 5 21H19C20.1 21 21 20.1 21 19V5C21 3.9 20.1 3 19 3ZM10 17H8V10H10V17ZM12 17H14V10H12V17ZM16 17H18V10H16V17Z"/>
                                </svg>
                            </div>
                            <span>App 5</span>
                        </div>
                    </div>
                    <div class="taskbar">
                        <div class="taskbar-item">
                            <svg viewBox="0 0 24 24">
                                <path d="M12 2C6.48 2 2 6.48 2 12C2 17.52 6.48 22 12 22C17.52 22 22 17.52 22 12C22 6.48 17.52 2 12 2ZM12 20C7.59 20 4 16.41 4 12C4 7.59 7.59 4 12 4C16.41 4 20 7.59 20 12C20 16.41 16.41 20 12 20Z"/>
                            </svg>
                        </div>
                        <div class="taskbar-item">
                            <svg viewBox="0 0 24 24">
                                <path d="M4 8H8V4H4V8ZM10 20H14V16H10V20ZM4 20H8V16H4V20ZM4 14H8V10H4V14ZM10 14H14V10H10V14ZM16 4V8H20V4H16ZM10 8H14V4H10V8ZM16 20H20V16H16V20ZM16 14H20V10H16V14Z"/>
                            </svg>
                        </div>
                        <div class="taskbar-item">
                            <svg viewBox="0 0 24 24">
                                <path d="M3 17V19H9V17H3ZM3 5V7H13V5H3ZM13 21V19H21V17H13V15H11V21H13ZM7 9V11H3V13H7V15H9V9H7ZM21 13V11H11V13H21ZM15 9H17V7H21V5H17V3H15V9Z"/>
                            </svg>
                        </div>
                    </div>
                    <div class="indicator-lights">
                        <div class="indicator power-indicator"></div>
                        <div class="indicator wifi-indicator"></div>
                        <div class="indicator bluetooth-indicator"></div>
                    </div>
                    <div class="brand-logo">xAI</div>
                </div>
                <div class="monitor-base"></div>
            </div>
            <div class="ambient-light"></div>
        </div>
    </div>


<script>
        const notificationIcon = document.getElementById('notification-icon');            
        const closeBtn = document.querySelector('.close-btn');
        const monitorDesktop = document.querySelector('.monitor-desktop');

        // Add click event listener to power icon to show the monitor
        notificationIcon.addEventListener('click', () => {
            monitorDesktop.classList.add('visible');
        });
                                                 // Add click event listener to close button to hide the monitor
        closeBtn.addEventListener('click', () => {
            // Add fade-out animation before hiding
            monitorDesktop.style.animation = 'fadeOut 0.5s ease-in-out';                      // Wait for the animation to complete before hiding                               setTimeout(() => {
                monitorDesktop.classList.remove('visible');
                monitorDesktop.style.animation = ''; // Reset animation
            }, 500); // Match the animation duration (0.5s)                               });
</script>
</body>
</html>
